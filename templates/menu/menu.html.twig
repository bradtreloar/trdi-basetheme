{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - classes: A list of classes to apply to the top level <ul> element.
 * - dropdown_classes: A list of classes to apply to the dropdown <ul> element.
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *
 * @ingroup templates
 *
 * Define a custom macro that will render all menu trees.
 */
#}
{% macro menu_links(items, attributes, menu_level, classes, dropdown_classes) %}
  {% if items %}
    <ul{{ attributes.addClass(menu_level == 0 ? classes : dropdown_classes) }}>
    {% for item in items %}
      {%
        set item_classes = item.url.getOption('container_attributes').class | split(" ")
      %}
      {%
        set item_classes = [
          item.is_expanded and item.below ? 'expanded dropdown',
          item.in_active_trail ? 'active active-trail',
          loop.first ? 'first',
          loop.last ? 'last',
        ]
      %}

      <li{{ item.attributes.addClass(classes) }}>
        {% if menu_level == 0 and item.is_expanded and item.below %}
          <a class="dropdown-toggle" href="{{ item.url }}" data-toggle="dropdown">
            {{ item.title }}
          </a>
        {% else %}
          <a href="{{ item.url }}">
            {{ item.title }}
          </a>
        {% endif %}
        {% if item.below %}
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
        {% endif %}
      </li>

    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}

{#
  Invoke the custom macro defined above. If classes were provided, use them.
  This allows the template to be extended without having to also duplicate the
  code above. @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{% set default_classes = [
  'menu',
  'menu--' ~ menu_name|clean_class,
  'nav']
%}
{% set default_dropdown_classes = [
  'dropdown-menu'
] %}
{{ _self.menu_links(items, attributes, 0, classes ?: default_classes, dropdown_classes ?: default_dropdown_classes) }}
